###########################################

CS 422 (Purdue): Assignment 3
Names: Otavio Sartorelli de Toledo Piza
PUIDs: 0032690213

###########################################

Question 1) Approximately how long into the simulation (seconds) is the DNS
            reflection attack detected? How can you tell this from the DNS
            response rate plot?

Answer 1) Approximately after 25 seconds after starting the monitor or 30 in total. We can estimate this by
          looking for the point in the graph in which the number of DNS replies received by H2
          starts to decrease until it goes back to normal levels (compared to H3). This reduction
          in the rate of DNS responses received by H2 indicates that monitor has installed
          the rule to drop DNS replies from H1 that do not have a corresponding request.

##########################################

Question 2) What components of the detection/mitigation technique used in this assignment
            may not be optimal for real-world deployment? Choose one and explain how it
            could be improved.

Answer 2) A some components that might not be optimal for real world deployment are having to install
          a rule for every DNS request, having a monitor sniff all DNS packets to look for reflection
          attacks, restricting a DNS server permanently. I believe blocking that creating a rule
          to block the server from sending DNS packets to a host permanently is problematic because,
          if the attack stops, we are still going to have to deal with the overhead of installing
          a new rule for every DNS request coming from the attacked host which is bound to consume
          processing resources on the switch and network.

##########################################

Question 3) DNS reflection attacks are of real concern in the global Internet,
            but a general solution that does not involve updating all connected
            hosts at once has yet to be found.

	        Think about the reasons why DNS reflection attacks are possible (e.g.,
	        what does the attacker do, what does the DNS resolver do, what causes
	        the victim to be negatively affected).

            Pick one of these reasons and brainstorm methods to prevent it, thereby
            preventing DNS reflection attacks (even if these methods require a
            complete Internet upgrade).

            Describe the reason you chose and a possible prevention method you came
            up with.

            This question is intentionally open-ended and will be graded leniently.
            Try to be concise yet thorough.

Answer 3) One of the major reasons why DNS are possible is that DNS servers are created to respond
          to any request they receive. In that sense, if an attacker has access to to a botnet
          and can send many fake requests, then current DNS server will send the response to the
          target host. One possible solution for DNS servers to throttle the maximum number of
          responses sent to a host. However, the problem with that solution is that it can be
          very hard do distinguish between legitimate and illegitimate traffic since some hosts
          might be actually just make multiple requests to a DNS server such as a datacenter.
          
          Another possible approach would be to have routers add information to
          the DNS request (similar to how onion routing works) so that when the request arrives
          at the DNS server it has a unique signature. Then, when replying to a request, the
          request would have to take the same path and every router would remove its
          secret. In that sense, if at any point, a router received a request with an invalid
          signature (i.e. one it hasn't seen before and doesn't match with its devices key)
          it would just drop the packet. To achieve this, we would have to reimplement DNS
          so that it supports this operation which is a major downside. However, one advantage
          of this approach is that it would distribute the work of detecting DNS reflection attacks
          and preventing them to the entire network.

          To ensure that hackers are not able to recreate that, each networking device would have
          to contain some secret key which can be used to generate pseudo-random numbers. Moreover,
          the information would have to be added in a way such that it's very expensive to find
          the secretes it is made of but cheap enough computationally for routers to be easily
          able to add their secret to them (kind of like RSA). Finally, we would also have to
          ensure packets take the same path which is not guaranteed by IP's best effort model.
